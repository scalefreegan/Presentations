%!PS-Adobe-2.0 EPSF-1.2%%Title: embllogo_neu.fhmx%%Creator: FreeHand 10.0%%CreationDate: 23.02.2006 15:57 Uhr%%BoundingBox: 0 0 1191 508%%FHPathName:kunden sk:EMBL:EMBL-06-00x Logoübergabe:embllogo_neu.fhmx%ALDOriginalFile:kunden sk:EMBL:EMBL-06-00x Logoübergabe:embllogo_neu.fhmx%ALDBoundingBox: 0 -207 1190 634%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 0.6 0 0.85 0.1 (EMBL GR\206N)%%+ 0 1 0.9 0.05 (EMBL ROT)%%EndComments%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get dup length 256 eq{256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }{7 -1 roll pop pop pop pop pop findfont}ifelse}ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCSC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFSC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFSC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCSC} ifelse}bdf/FDFSC{dup hasfont not { pop/zh-gbscript-1.11hasfont {/zh-gbscript-1.11}{/Courier}ifelse }if}bdf/FFSC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFSC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {1692 1584 2882.55 2425.89 } def /bleed 0 def /clpr {1692 1584 2882.55 2425.89 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1692 -1791 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms2634.3105 2276.9118 m2634.3105 2288.8533 2643.9908 2298.5336 2655.9323 2298.5336 C2667.8738 2298.5336 2677.5541 2288.8533 2677.5541 2276.9118 C2677.5541 2264.9703 2667.8738 2255.29 2655.9323 2255.29 C2643.9908 2255.29 2634.3105 2264.9703 2634.3105 2276.9118 C[0.6 0 0.85 0.1]vcf n2634.3105 2276.9118 m2634.3105 2288.8533 2643.9908 2298.5336 2655.9323 2298.5336 C2667.8738 2298.5336 2677.5541 2288.8533 2677.5541 2276.9118 C2677.5541 2264.9703 2667.8738 2255.29 2655.9323 2255.29 C2643.9908 2255.29 2634.3105 2264.9703 2634.3105 2276.9118 Cf n2634.3105 1812.6713 m2634.3105 1824.6129 2643.9908 1834.2932 2655.9323 1834.2932 C2667.8738 1834.2932 2677.5541 1824.6129 2677.5541 1812.6713 C2677.5541 1800.7297 2667.8738 1791.0495 2655.9323 1791.0495 C2643.9908 1791.0495 2634.3105 1800.7297 2634.3105 1812.6713 Cf n2634.3105 1812.6713 m2634.3105 1824.6129 2643.9908 1834.2932 2655.9323 1834.2932 C2667.8738 1834.2932 2677.5541 1824.6129 2677.5541 1812.6713 C2677.5541 1800.7297 2667.8738 1791.0495 2655.9323 1791.0495 C2643.9908 1791.0495 2634.3105 1800.7297 2634.3105 1812.6713 Cf n2685.9217 2247.8968 m2685.9217 2259.8383 2695.602 2269.5186 2707.5436 2269.5186 C2719.4852 2269.5186 2729.1655 2259.8383 2729.1655 2247.8968 C2729.1655 2235.9553 2719.4852 2226.2751 2707.5436 2226.2751 C2695.602 2226.2751 2685.9217 2235.9553 2685.9217 2247.8968 Cf n2582.6989 2247.8968 m2582.6989 2259.8383 2592.3793 2269.5186 2604.3209 2269.5186 C2616.2626 2269.5186 2625.9429 2259.8383 2625.9429 2247.8968 C2625.9429 2235.9553 2616.2626 2226.2751 2604.3209 2226.2751 C2592.3793 2226.2751 2582.6989 2235.9553 2582.6989 2247.8968 Cf n2685.9217 1841.6863 m2685.9217 1853.628 2695.602 1863.3084 2707.5436 1863.3084 C2719.4852 1863.3084 2729.1655 1853.628 2729.1655 1841.6863 C2729.1655 1829.7447 2719.4852 1820.0643 2707.5436 1820.0643 C2695.602 1820.0643 2685.9217 1829.7447 2685.9217 1841.6863 Cf n2582.6989 1841.6863 m2582.6989 1853.628 2592.3793 1863.3084 2604.3209 1863.3084 C2616.2626 1863.3084 2625.9429 1853.628 2625.9429 1841.6863 C2625.9429 1829.7447 2616.2626 1820.0643 2604.3209 1820.0643 C2592.3793 1820.0643 2582.6989 1829.7447 2582.6989 1841.6863 Cf n2634.3105 2218.8819 m2634.3105 2230.8234 2643.9908 2240.5035 2655.9323 2240.5035 C2667.8738 2240.5035 2677.5541 2230.8234 2677.5541 2218.8819 C2677.5541 2206.9405 2667.8738 2197.2603 2655.9323 2197.2603 C2643.9908 2197.2603 2634.3105 2206.9405 2634.3105 2218.8819 Cf n2737.5331 2218.8818 m2737.5331 2230.8232 2747.2133 2240.5034 2759.1548 2240.5034 C2771.0963 2240.5034 2780.7766 2230.8232 2780.7766 2218.8818 C2780.7766 2206.9404 2771.0963 2197.2602 2759.1548 2197.2602 C2747.2133 2197.2602 2737.5331 2206.9404 2737.5331 2218.8818 Cf nvmrs2531.0877 2218.8818 m2531.0877 2230.8232 2540.7679 2240.5034 2552.7095 2240.5034 C2564.651 2240.5034 2574.3313 2230.8232 2574.3313 2218.8818 C2574.3313 2206.9404 2564.651 2197.2602 2552.7095 2197.2602 C2540.7679 2197.2602 2531.0877 2206.9404 2531.0877 2218.8818 C[0.6 0 0.85 0.1]vcf n2634.3105 1870.7014 m2634.3105 1882.6428 2643.9908 1892.3231 2655.9323 1892.3231 C2667.8738 1892.3231 2677.5541 1882.6428 2677.5541 1870.7014 C2677.5541 1858.7599 2667.8738 1849.0797 2655.9323 1849.0797 C2643.9908 1849.0797 2634.3105 1858.7599 2634.3105 1870.7014 Cf n2737.5331 1870.7014 m2737.5331 1882.6429 2747.2133 1892.3231 2759.1548 1892.3231 C2771.0963 1892.3231 2780.7766 1882.6429 2780.7766 1870.7014 C2780.7766 1858.7599 2771.0963 1849.0797 2759.1548 1849.0797 C2747.2133 1849.0797 2737.5331 1858.7599 2737.5331 1870.7014 Cf n2531.0877 1870.7014 m2531.0877 1882.6429 2540.7679 1892.3231 2552.7095 1892.3231 C2564.651 1892.3231 2574.3313 1882.6429 2574.3313 1870.7014 C2574.3313 1858.7599 2564.651 1849.0797 2552.7095 1849.0797 C2540.7679 1849.0797 2531.0877 1858.7599 2531.0877 1870.7014 Cf n2685.9217 2189.8669 m2685.9217 2201.8085 2695.602 2211.4889 2707.5436 2211.4889 C2719.4852 2211.4889 2729.1655 2201.8085 2729.1655 2189.8669 C2729.1655 2177.9253 2719.4852 2168.245 2707.5436 2168.245 C2695.602 2168.245 2685.9217 2177.9253 2685.9217 2189.8669 Cf n2789.1441 2189.8667 m2789.1441 2201.8083 2798.8244 2211.4886 2810.766 2211.4886 C2822.7075 2211.4886 2832.3878 2201.8083 2832.3878 2189.8667 C2832.3878 2177.9251 2822.7075 2168.2448 2810.766 2168.2448 C2798.8244 2168.2448 2789.1441 2177.9251 2789.1441 2189.8667 Cf n2582.6989 2189.8669 m2582.6989 2201.8085 2592.3793 2211.4889 2604.3209 2211.4889 C2616.2626 2211.4889 2625.9429 2201.8085 2625.9429 2189.8669 C2625.9429 2177.9253 2616.2626 2168.245 2604.3209 2168.245 C2592.3793 2168.245 2582.6989 2177.9253 2582.6989 2189.8669 Cf n2479.4762 2189.8667 m2479.4762 2201.8083 2489.1565 2211.4886 2501.0981 2211.4886 C2513.0397 2211.4886 2522.7201 2201.8083 2522.7201 2189.8667 C2522.7201 2177.9251 2513.0397 2168.2448 2501.0981 2168.2448 C2489.1565 2168.2448 2479.4762 2177.9251 2479.4762 2189.8667 Cf n2685.9217 2131.8366 m2685.9217 2143.7783 2695.602 2153.4587 2707.5436 2153.4587 C2719.4852 2153.4587 2729.1655 2143.7783 2729.1655 2131.8366 C2729.1655 2119.8949 2719.4852 2110.2145 2707.5436 2110.2145 C2695.602 2110.2145 2685.9217 2119.8949 2685.9217 2131.8366 Cf n2789.1441 2131.8364 m2789.1441 2143.7782 2798.8244 2153.4586 2810.766 2153.4586 C2822.7075 2153.4586 2832.3878 2143.7782 2832.3878 2131.8364 C2832.3878 2119.8947 2822.7075 2110.2143 2810.766 2110.2143 C2798.8244 2110.2143 2789.1441 2119.8947 2789.1441 2131.8364 Cf nvmrs2582.6989 2131.8366 m2582.6989 2143.7783 2592.3793 2153.4587 2604.3209 2153.4587 C2616.2626 2153.4587 2625.9429 2143.7783 2625.9429 2131.8366 C2625.9429 2119.8949 2616.2626 2110.2145 2604.3209 2110.2145 C2592.3793 2110.2145 2582.6989 2119.8949 2582.6989 2131.8366 C[0.6 0 0.85 0.1]vcf n2479.4762 2131.8364 m2479.4762 2143.7782 2489.1565 2153.4586 2501.0981 2153.4586 C2513.0397 2153.4586 2522.7201 2143.7782 2522.7201 2131.8364 C2522.7201 2119.8947 2513.0397 2110.2143 2501.0981 2110.2143 C2489.1565 2110.2143 2479.4762 2119.8947 2479.4762 2131.8364 Cf n2685.9217 2073.8064 m2685.9217 2085.748 2695.602 2095.4283 2707.5436 2095.4283 C2719.4852 2095.4283 2729.1655 2085.748 2729.1655 2073.8064 C2729.1655 2061.8648 2719.4852 2052.1846 2707.5436 2052.1846 C2695.602 2052.1846 2685.9217 2061.8648 2685.9217 2073.8064 Cf n2789.1441 2073.8062 m2789.1441 2085.7478 2798.8244 2095.4281 2810.766 2095.4281 C2822.7075 2095.4281 2832.3878 2085.7478 2832.3878 2073.8062 C2832.3878 2061.8647 2822.7075 2052.1844 2810.766 2052.1844 C2798.8244 2052.1844 2789.1441 2061.8647 2789.1441 2073.8062 Cf n2582.6989 2073.8064 m2582.6989 2085.748 2592.3793 2095.4283 2604.3209 2095.4283 C2616.2626 2095.4283 2625.9429 2085.748 2625.9429 2073.8064 C2625.9429 2061.8648 2616.2626 2052.1846 2604.3209 2052.1846 C2592.3793 2052.1846 2582.6989 2061.8648 2582.6989 2073.8064 Cf n2479.4762 2073.8062 m2479.4762 2085.7478 2489.1565 2095.4281 2501.0981 2095.4281 C2513.0397 2095.4281 2522.7201 2085.7478 2522.7201 2073.8062 C2522.7201 2061.8647 2513.0397 2052.1844 2501.0981 2052.1844 C2489.1565 2052.1844 2479.4762 2061.8647 2479.4762 2073.8062 Cf n2685.9217 2015.7764 m2685.9217 2027.718 2695.602 2037.3983 2707.5436 2037.3983 C2719.4852 2037.3983 2729.1655 2027.718 2729.1655 2015.7764 C2729.1655 2003.8349 2719.4852 1994.1546 2707.5436 1994.1546 C2695.602 1994.1546 2685.9217 2003.8349 2685.9217 2015.7764 Cf n2789.1441 2015.7763 m2789.1441 2027.7179 2798.8244 2037.3982 2810.766 2037.3982 C2822.7075 2037.3982 2832.3878 2027.7179 2832.3878 2015.7763 C2832.3878 2003.8347 2822.7075 1994.1544 2810.766 1994.1544 C2798.8244 1994.1544 2789.1441 2003.8347 2789.1441 2015.7763 Cf n2582.6989 2015.7764 m2582.6989 2027.718 2592.3793 2037.3983 2604.3209 2037.3983 C2616.2626 2037.3983 2625.9429 2027.718 2625.9429 2015.7764 C2625.9429 2003.8349 2616.2626 1994.1546 2604.3209 1994.1546 C2592.3793 1994.1546 2582.6989 2003.8349 2582.6989 2015.7764 Cf n2479.4762 2015.7763 m2479.4762 2027.7179 2489.1565 2037.3982 2501.0981 2037.3982 C2513.0397 2037.3982 2522.7201 2027.7179 2522.7201 2015.7763 C2522.7201 2003.8347 2513.0397 1994.1544 2501.0981 1994.1544 C2489.1565 1994.1544 2479.4762 2003.8347 2479.4762 2015.7763 Cf nvmrs2685.9217 1957.7465 m2685.9217 1969.688 2695.602 1979.3684 2707.5436 1979.3684 C2719.4852 1979.3684 2729.1655 1969.688 2729.1655 1957.7465 C2729.1655 1945.8049 2719.4852 1936.1246 2707.5436 1936.1246 C2695.602 1936.1246 2685.9217 1945.8049 2685.9217 1957.7465 C[0.6 0 0.85 0.1]vcf n2789.1441 1957.7464 m2789.1441 1969.6879 2798.8244 1979.3682 2810.766 1979.3682 C2822.7075 1979.3682 2832.3878 1969.6879 2832.3878 1957.7464 C2832.3878 1945.8048 2822.7075 1936.1245 2810.766 1936.1245 C2798.8244 1936.1245 2789.1441 1945.8048 2789.1441 1957.7464 Cf n2582.6989 1957.7465 m2582.6989 1969.688 2592.3793 1979.3684 2604.3209 1979.3684 C2616.2626 1979.3684 2625.9429 1969.688 2625.9429 1957.7465 C2625.9429 1945.8049 2616.2626 1936.1246 2604.3209 1936.1246 C2592.3793 1936.1246 2582.6989 1945.8049 2582.6989 1957.7465 Cf n2479.4762 1957.7464 m2479.4762 1969.6879 2489.1565 1979.3682 2501.0981 1979.3682 C2513.0397 1979.3682 2522.7201 1969.6879 2522.7201 1957.7464 C2522.7201 1945.8048 2513.0397 1936.1245 2501.0981 1936.1245 C2489.1565 1936.1245 2479.4762 1945.8048 2479.4762 1957.7464 Cf n2685.9217 1899.7165 m2685.9217 1911.6581 2695.602 1921.3383 2707.5436 1921.3383 C2719.4852 1921.3383 2729.1655 1911.6581 2729.1655 1899.7165 C2729.1655 1887.7749 2719.4852 1878.0946 2707.5436 1878.0946 C2695.602 1878.0946 2685.9217 1887.7749 2685.9217 1899.7165 Cf n2789.1441 1899.7164 m2789.1441 1911.658 2798.8244 1921.3383 2810.766 1921.3383 C2822.7075 1921.3383 2832.3878 1911.658 2832.3878 1899.7164 C2832.3878 1887.7749 2822.7075 1878.0946 2810.766 1878.0946 C2798.8244 1878.0946 2789.1441 1887.7749 2789.1441 1899.7164 Cf n2582.6989 1899.7165 m2582.6989 1911.6581 2592.3793 1921.3383 2604.3209 1921.3383 C2616.2626 1921.3383 2625.9429 1911.6581 2625.9429 1899.7165 C2625.9429 1887.7749 2616.2626 1878.0946 2604.3209 1878.0946 C2592.3793 1878.0946 2582.6989 1887.7749 2582.6989 1899.7165 Cf n2479.4762 1899.7164 m2479.4762 1911.658 2489.1565 1921.3383 2501.0981 1921.3383 C2513.0397 1921.3383 2522.7201 1911.658 2522.7201 1899.7164 C2522.7201 1887.7749 2513.0397 1878.0946 2501.0981 1878.0946 C2489.1565 1878.0946 2479.4762 1887.7749 2479.4762 1899.7164 Cf n2634.3105 2160.8523 m2634.3105 2172.7937 2643.9908 2182.4739 2655.9323 2182.4739 C2667.8738 2182.4739 2677.5541 2172.7937 2677.5541 2160.8523 C2677.5541 2148.9108 2667.8738 2139.2306 2655.9323 2139.2306 C2643.9908 2139.2306 2634.3105 2148.9108 2634.3105 2160.8523 Cf n2737.5331 2160.8521 m2737.5331 2172.7936 2747.2133 2182.4738 2759.1548 2182.4738 C2771.0963 2182.4738 2780.7766 2172.7936 2780.7766 2160.8521 C2780.7766 2148.9106 2771.0963 2139.2305 2759.1548 2139.2305 C2747.2133 2139.2305 2737.5331 2148.9106 2737.5331 2160.8521 Cf nvmrs2840.7554 2160.8517 m2840.7554 2172.7932 2850.4357 2182.4734 2862.3773 2182.4734 C2874.3188 2182.4734 2883.9991 2172.7932 2883.9991 2160.8517 C2883.9991 2148.9102 2874.3188 2139.23 2862.3773 2139.23 C2850.4357 2139.23 2840.7554 2148.9102 2840.7554 2160.8517 C[0.6 0 0.85 0.1]vcf n2531.0877 2160.8521 m2531.0877 2172.7936 2540.7679 2182.4738 2552.7095 2182.4738 C2564.651 2182.4738 2574.3313 2172.7936 2574.3313 2160.8521 C2574.3313 2148.9106 2564.651 2139.2305 2552.7095 2139.2305 C2540.7679 2139.2305 2531.0877 2148.9106 2531.0877 2160.8521 Cf n2427.8648 2160.8517 m2427.8648 2172.7932 2437.5451 2182.4734 2449.4867 2182.4734 C2461.4283 2182.4734 2471.1086 2172.7932 2471.1086 2160.8517 C2471.1086 2148.9102 2461.4283 2139.23 2449.4867 2139.23 C2437.5451 2139.23 2427.8648 2148.9102 2427.8648 2160.8517 Cf n2634.3105 2102.8222 m2634.3105 2114.7638 2643.9908 2124.4442 2655.9323 2124.4442 C2667.8738 2124.4442 2677.5541 2114.7638 2677.5541 2102.8222 C2677.5541 2090.8805 2667.8738 2081.2002 2655.9323 2081.2002 C2643.9908 2081.2002 2634.3105 2090.8805 2634.3105 2102.8222 Cf n2737.5331 2102.8221 m2737.5331 2114.7637 2747.2133 2124.4441 2759.1548 2124.4441 C2771.0963 2124.4441 2780.7766 2114.7637 2780.7766 2102.8221 C2780.7766 2090.8804 2771.0963 2081.2 2759.1548 2081.2 C2747.2133 2081.2 2737.5331 2090.8804 2737.5331 2102.8221 Cf n2840.7554 2102.8217 m2840.7554 2114.7634 2850.4357 2124.4438 2862.3773 2124.4438 C2874.3188 2124.4438 2883.9991 2114.7634 2883.9991 2102.8217 C2883.9991 2090.8801 2874.3188 2081.1998 2862.3773 2081.1998 C2850.4357 2081.1998 2840.7554 2090.8801 2840.7554 2102.8217 Cf n2531.0877 2102.8221 m2531.0877 2114.7637 2540.7679 2124.4441 2552.7095 2124.4441 C2564.651 2124.4441 2574.3313 2114.7637 2574.3313 2102.8221 C2574.3313 2090.8804 2564.651 2081.2 2552.7095 2081.2 C2540.7679 2081.2 2531.0877 2090.8804 2531.0877 2102.8221 Cf n2427.8648 2102.8217 m2427.8648 2114.7634 2437.5451 2124.4438 2449.4867 2124.4438 C2461.4283 2124.4438 2471.1086 2114.7634 2471.1086 2102.8217 C2471.1086 2090.8801 2461.4283 2081.1998 2449.4867 2081.1998 C2437.5451 2081.1998 2427.8648 2090.8801 2427.8648 2102.8217 Cf n2634.3105 2044.7919 m2634.3105 2056.7335 2643.9908 2066.4138 2655.9323 2066.4138 C2667.8738 2066.4138 2677.5541 2056.7335 2677.5541 2044.7919 C2677.5541 2032.8504 2667.8738 2023.1702 2655.9323 2023.1702 C2643.9908 2023.1702 2634.3105 2032.8504 2634.3105 2044.7919 Cf n2737.5331 2044.7919 m2737.5331 2056.7334 2747.2133 2066.4137 2759.1548 2066.4137 C2771.0963 2066.4137 2780.7766 2056.7334 2780.7766 2044.7919 C2780.7766 2032.8503 2771.0963 2023.1701 2759.1548 2023.1701 C2747.2133 2023.1701 2737.5331 2032.8503 2737.5331 2044.7919 Cf nvmrs2840.7554 2044.7916 m2840.7554 2056.7332 2850.4357 2066.4135 2862.3773 2066.4135 C2874.3188 2066.4135 2883.9991 2056.7332 2883.9991 2044.7916 C2883.9991 2032.8501 2874.3188 2023.1698 2862.3773 2023.1698 C2850.4357 2023.1698 2840.7554 2032.8501 2840.7554 2044.7916 C[0.6 0 0.85 0.1]vcf n2531.0877 2044.7919 m2531.0877 2056.7334 2540.7679 2066.4137 2552.7095 2066.4137 C2564.651 2066.4137 2574.3313 2056.7334 2574.3313 2044.7919 C2574.3313 2032.8503 2564.651 2023.1701 2552.7095 2023.1701 C2540.7679 2023.1701 2531.0877 2032.8503 2531.0877 2044.7919 Cf n2427.8648 2044.7916 m2427.8648 2056.7332 2437.5451 2066.4135 2449.4867 2066.4135 C2461.4283 2066.4135 2471.1086 2056.7332 2471.1086 2044.7916 C2471.1086 2032.8501 2461.4283 2023.1698 2449.4867 2023.1698 C2437.5451 2023.1698 2427.8648 2032.8501 2427.8648 2044.7916 Cf n2634.3105 1986.7618 m2634.3105 1998.7034 2643.9908 2008.3837 2655.9323 2008.3837 C2667.8738 2008.3837 2677.5541 1998.7034 2677.5541 1986.7618 C2677.5541 1974.8202 2667.8738 1965.1398 2655.9323 1965.1398 C2643.9908 1965.1398 2634.3105 1974.8202 2634.3105 1986.7618 Cf n2737.5331 1986.7617 m2737.5331 1998.7033 2747.2133 2008.3837 2759.1548 2008.3837 C2771.0963 2008.3837 2780.7766 1998.7033 2780.7766 1986.7617 C2780.7766 1974.8201 2771.0963 1965.1398 2759.1548 1965.1398 C2747.2133 1965.1398 2737.5331 1974.8201 2737.5331 1986.7617 Cf n2840.7554 1986.7616 m2840.7554 1998.7032 2850.4357 2008.3835 2862.3773 2008.3835 C2874.3188 2008.3835 2883.9991 1998.7032 2883.9991 1986.7616 C2883.9991 1974.82 2874.3188 1965.1397 2862.3773 1965.1397 C2850.4357 1965.1397 2840.7554 1974.82 2840.7554 1986.7616 Cf n2531.0877 1986.7617 m2531.0877 1998.7033 2540.7679 2008.3837 2552.7095 2008.3837 C2564.651 2008.3837 2574.3313 1998.7033 2574.3313 1986.7617 C2574.3313 1974.8201 2564.651 1965.1398 2552.7095 1965.1398 C2540.7679 1965.1398 2531.0877 1974.8201 2531.0877 1986.7617 C[0 1 0.9 0.05]vcf n2427.8648 1986.7616 m2427.8648 1998.7032 2437.5451 2008.3835 2449.4867 2008.3835 C2461.4283 2008.3835 2471.1086 1998.7032 2471.1086 1986.7616 C2471.1086 1974.82 2461.4283 1965.1397 2449.4867 1965.1397 C2437.5451 1965.1397 2427.8648 1974.82 2427.8648 1986.7616 C[0.6 0 0.85 0.1]vcf n2634.3105 1928.7315 m2634.3105 1940.6731 2643.9908 1950.3534 2655.9323 1950.3534 C2667.8738 1950.3534 2677.5541 1940.6731 2677.5541 1928.7315 C2677.5541 1916.7898 2667.8738 1907.1095 2655.9323 1907.1095 C2643.9908 1907.1095 2634.3105 1916.7898 2634.3105 1928.7315 Cf n2737.5331 1928.7315 m2737.5331 1940.6731 2747.2133 1950.3534 2759.1548 1950.3534 C2771.0963 1950.3534 2780.7766 1940.6731 2780.7766 1928.7315 C2780.7766 1916.7898 2771.0963 1907.1095 2759.1548 1907.1095 C2747.2133 1907.1095 2737.5331 1916.7898 2737.5331 1928.7315 Cf nvmrs2840.7554 1928.7314 m2840.7554 1940.6731 2850.4357 1950.3534 2862.3773 1950.3534 C2874.3188 1950.3534 2883.9991 1940.6731 2883.9991 1928.7314 C2883.9991 1916.7898 2874.3188 1907.1095 2862.3773 1907.1095 C2850.4357 1907.1095 2840.7554 1916.7898 2840.7554 1928.7314 C[0.6 0 0.85 0.1]vcf n2531.0877 1928.7315 m2531.0877 1940.6731 2540.7679 1950.3534 2552.7095 1950.3534 C2564.651 1950.3534 2574.3313 1940.6731 2574.3313 1928.7315 C2574.3313 1916.7898 2564.651 1907.1095 2552.7095 1907.1095 C2540.7679 1907.1095 2531.0877 1916.7898 2531.0877 1928.7315 Cf n2427.8648 1928.7314 m2427.8648 1940.6731 2437.5451 1950.3534 2449.4867 1950.3534 C2461.4283 1950.3534 2471.1086 1940.6731 2471.1086 1928.7314 C2471.1086 1916.7898 2461.4283 1907.1095 2449.4867 1907.1095 C2437.5451 1907.1095 2427.8648 1916.7898 2427.8648 1928.7314 Cf n1816.9957 1978.9531 m1713.2851 1978.9531 L1713.2851 2036.9797 L1807.1883 2036.9797 L1807.1883 2058.9014 L1713.2851 2058.9014 L1713.2851 2111.1902 L1814.4467 2111.1902 L1814.4467 2132.2803 L1691.9932 2132.2803 L1691.9932 1957.8633 L1816.9957 1957.8633 L1816.9957 1978.9531 L[0 0 0 1]vcf n2017.8369 1957.8633 m2017.8369 2132.2803 L1986.8235 2132.2803 L1986.8235 2132.2803 1979.7892 2114.6482 1979.09 2112.5437 C1954.0411 2037.1415 1937.2856 1986.7461 1937.2856 1986.7461 C1936.7955 1986.7461 L1936.7955 1986.7461 1919.9624 2037.1415 1894.781 2112.5437 C1894.0723 2114.6658 1887.0108 2132.2803 1887.0108 2132.2803 C1855.7504 2132.2803 L1855.7504 1957.8633 L1877.1519 1957.8633 L1877.1519 2061.0108 L1877.1519 2066.1636 1876.658 2086.7803 1876.658 2102.9682 C1877.1519 2102.9682 L1925.0235 1957.8633 L1948.5637 1957.8633 L1996.4391 2103.2113 L1996.9293 2103.2113 L1996.9293 2086.7803 1996.4391 1957.8633 1996.4391 1957.8633 C2017.8369 1957.8633 Lf ntrue eomode2080.872 2112.7556 m2124.8626 2112.7556 L2151.3477 2112.7556 2162.2339 2103.4379 2162.2339 2087.0067 C2162.2339 2065.4265 2147.4224 2059.3916 2124.6156 2059.3916 C2080.872 2059.3916 L2080.872 2112.7556 Lh2059.5799 1957.8633 m2133.6898 1957.8633 L2172.6841 1957.8633 2191.0311 1980.8194 2191.0311 2009.0229 C2191.0311 2039.1873 2173.1742 2047.2776 2161.6455 2051.9364 C2181.0209 2061.0108 2182.6943 2077.1988 2182.6943 2088.7243 C2182.6943 2112.7556 2168.2685 2132.2803 2135.4073 2132.2803 C2059.5799 2132.2803 L2059.5799 1957.8633 Lh2080.872 2039.1873 m2128.5409 2039.1873 L2147.9126 2039.1873 2170.5708 2034.2816 2170.5708 2009.5132 C2170.5708 1989.8936 2157.2337 1977.3842 2132.4661 1977.3842 C2080.872 1977.3842 L2080.872 2039.1873 Lf nfalse eomode2248.6546 2132.2803 m2225.699 2132.2803 L2225.699 1957.8633 L2340.3789 1957.8633 L2340.3789 1979.7848 L2248.6546 1979.7848 L2248.6546 2132.2803 Lf nvmrvmrend%%Trailer